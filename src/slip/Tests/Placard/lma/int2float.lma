//AAAAA COP  ii, aaaaaa(jj)
// But : Sous-programme pour convertir un nombre entier
// positif ou nul, du format complément à deux
// vers le format virgule flottante
// 
// Pre : R1 >= 0 (à convertir, en complément à deux)
// Post : R1 est inchangé et R4 représente, en virgule
// flottante, le même nombre que R1, en complément à 
// deux. (Les registres R0, R2, R3, R5 sont aussi modifiés.)
//AAAAA COP  ii, aaaaaa(jj) 
1000    STM   1, 1046        // Sauver R1.
1004    LDM   0, 1054        // R0(c2) = 2
1008    LDM   3, 1050        // R3(vf) = 1 
1012    LDA   4, 0           // R4(c2) = R4(vf) = 0
1016    LDM   5, 1060        // R5(vf) = 2
//
// Invariant :  
// Soit v la valeur initiale de R1(c2).
// On a toujours, à cet endroit :
// v = R1(c2) * R3(vf) + R4(vf)
// 
1020    JZ    1, 1038        // Si R1 = 0, clôturer.
1024    DIV   1, 0           // Diviser R1 par 2 (reste dans R2).
// v = (R1(c2) * 2 + R2(c2)) * R3(vf) + R4(vf)
1026    JZ    2, 1032        // Si le reste est pair, sauter 
//                              par dessus l'instruction suivante.
1030    ADDF  4, 3           // v = R1(c2) * 2 * R3(vf) + R4(vf)
1032    MULF  3, 5           // v = R1(c2) * R3(vf) + R4(vf)
1034    JUMP     1020        // Itérer.
1038    LDM   1, 1046
1042    JUMP  0,      0(15)  // Retour à l'appelant.
//                              R1 est sauvé en 1046.
1050    LIT  F(1)            // 1 en virgule flottante
1054    LIT  I(2)            // 2 en complément à deux
1060    LIT  F(2)            // 2 en virgule flottante
//
// Appel du sous-programme
2000    LDA   1, 53870
2004    JUMP 15, 1000
2008    HALT  0, 0







